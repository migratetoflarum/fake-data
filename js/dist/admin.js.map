{"version":3,"file":"admin.js","mappings":"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","sources":["webpack://@migratetoflarum/fake-data/webpack/bootstrap","webpack://@migratetoflarum/fake-data/webpack/runtime/compat get default export","webpack://@migratetoflarum/fake-data/webpack/runtime/define property getters","webpack://@migratetoflarum/fake-data/webpack/runtime/hasOwnProperty shorthand","webpack://@migratetoflarum/fake-data/webpack/runtime/make namespace object","webpack://@migratetoflarum/fake-data/external root \"flarum.core.compat['admin/app']\"","webpack://@migratetoflarum/fake-data/./node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js","webpack://@migratetoflarum/fake-data/./node_modules/@babel/runtime/helpers/esm/inheritsLoose.js","webpack://@migratetoflarum/fake-data/external root \"flarum.core.compat['admin/components/ExtensionPage']\"","webpack://@migratetoflarum/fake-data/external root \"flarum.core.compat['common/app']\"","webpack://@migratetoflarum/fake-data/external root \"flarum.core.compat['common/Component']\"","webpack://@migratetoflarum/fake-data/external root \"flarum.core.compat['common/components/Button']\"","webpack://@migratetoflarum/fake-data/external root \"flarum.core.compat['common/components/Switch']\"","webpack://@migratetoflarum/fake-data/external root \"flarum.core.compat['common/helpers/icon']\"","webpack://@migratetoflarum/fake-data/./src/common/components/GeneratorForm.ts","webpack://@migratetoflarum/fake-data/./src/admin/components/FakeDataPage.ts","webpack://@migratetoflarum/fake-data/./src/admin/index.ts"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['admin/app'];","export default function _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n  return _setPrototypeOf(o, p);\n}","import setPrototypeOf from \"./setPrototypeOf.js\";\nexport default function _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  setPrototypeOf(subClass, superClass);\n}","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['admin/components/ExtensionPage'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/app'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/Component'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/components/Button'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/components/Switch'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/helpers/icon'];","import app from 'flarum/common/app';\nimport Component, {ComponentAttrs} from 'flarum/common/Component';\nimport Button from 'flarum/common/components/Button';\nimport Switch from 'flarum/common/components/Switch';\nimport Discussion from 'flarum/common/models/Discussion';\nimport icon from 'flarum/common/helpers/icon';\n\nconst translationPrefix = 'migratetoflarum-fake-data.lib.generator.';\n\ninterface GeneratorFormAttrs extends ComponentAttrs {\n    discussion?: Discussion\n}\n\nexport default class GeneratorForm extends Component<GeneratorFormAttrs> {\n    bulk: boolean = false\n    userCount: number = 0\n    discussionCount: number = 0\n    discussionTag: string = 'none'\n    postCount: number = 0\n    dateStart: string = ''\n    dateInterval: string = ''\n    dirty: boolean = false\n    loading: boolean = false\n    output: string | null = null\n\n    view() {\n        const disabled = this.loading || this.output;\n\n        return [\n            m('.Form-group', [\n                Switch.component({\n                    state: this.bulk,\n                    onchange: (value: boolean) => {\n                        this.bulk = value;\n                    },\n                    disabled,\n                }, app.translator.trans(translationPrefix + 'bulk-mode')),\n                m('.helpText', app.translator.trans(translationPrefix + 'bulk-mode-description')),\n            ]),\n            m('.Form-group', [\n                m('label', app.translator.trans(translationPrefix + 'user-count')),\n                m('input.FormControl', {\n                    type: 'number',\n                    min: '0',\n                    value: this.userCount + '',\n                    oninput: (event: Event) => {\n                        this.userCount = parseInt((event.target as HTMLInputElement).value);\n                        this.dirty = true;\n                    },\n                    disabled,\n                }),\n            ]),\n            this.attrs.discussion ? null : [\n                m('.Form-group', [\n                    m('label', app.translator.trans(translationPrefix + 'discussion-count')),\n                    m('input.FormControl', {\n                        type: 'number',\n                        min: '0',\n                        value: this.discussionCount + '',\n                        oninput: (event: Event) => {\n                            this.discussionCount = parseInt((event.target as HTMLInputElement).value);\n                            this.dirty = true;\n                        },\n                        disabled,\n                    }),\n                ]),\n                flarum.extensions['flarum-tags'] ? m('.Form-group', [\n                    m('label', app.translator.trans(translationPrefix + 'discussion-tags')),\n                    m('span.Select', [\n                        m('select.Select-input.FormControl', {\n                            onchange: (event: Event) => {\n                                this.discussionTag = (event.target as HTMLInputElement).value;\n                            },\n                            value: this.discussionTag,\n                            disabled,\n                        }, [\n                            m('option', {\n                                value: 'none',\n                            }, app.translator.trans(translationPrefix + 'discussion-tags-none')),\n                            m('option', {\n                                value: 'random',\n                            }, app.translator.trans(translationPrefix + 'discussion-tags-random')),\n                            flarum.core.compat['tags/utils/sortTags'](app.store.all('tags')).map((tag: any) => {\n                                let label = tag.name();\n                                const ids = [tag.id()];\n\n                                if (tag.isChild()) {\n                                    const parent = tag.parent();\n                                    label = parent.name() + ' / ' + label;\n                                    ids.push(parent.id());\n                                }\n\n                                // Sort IDs in the comma-separated value so we can compare two values and know it's the same\n                                const value = ids.sort().join(',');\n\n                                return m('option', {\n                                    value,\n                                }, label);\n                            }),\n                        ]),\n                        icon('fas fa-sort', {className: 'Select-caret'}),\n                    ]),\n                ]) : null,\n            ],\n            m('.Form-group', [\n                m('label', app.translator.trans(translationPrefix + 'post-count')),\n                m('input.FormControl', {\n                    type: 'number',\n                    min: '0',\n                    value: this.postCount + '',\n                    oninput: (event: Event) => {\n                        this.postCount = parseInt((event.target as HTMLInputElement).value);\n                        this.dirty = true;\n                    },\n                    disabled,\n                }),\n            ]),\n            m('.Form-group.FakeData-Date', [\n                m('label', app.translator.trans(translationPrefix + 'date')),\n                m('input.FormControl', {\n                    type: 'text',\n                    value: this.dateStart + '',\n                    oninput: (event: Event) => {\n                        this.dateStart = (event.target as HTMLInputElement).value;\n                        this.dirty = true;\n                    },\n                    disabled,\n                    placeholder: app.translator.trans(translationPrefix + 'date-start-placeholder'),\n                }),\n                m('input.FormControl', {\n                    type: 'text',\n                    value: this.dateInterval + '',\n                    oninput: (event: Event) => {\n                        this.dateInterval = (event.target as HTMLInputElement).value;\n                        this.dirty = true;\n                    },\n                    disabled,\n                    placeholder: app.translator.trans(translationPrefix + 'date-interval-placeholder'),\n                }),\n            ]),\n            m('.Form-group', [\n                this.output === null ? Button.component({\n                    disabled: !this.dirty,\n                    loading: this.loading,\n                    className: 'Button Button--primary',\n                    onclick: () => {\n                        this.loading = true;\n\n                        const body: any = {\n                            bulk: this.bulk,\n                            user_count: this.userCount,\n                            post_count: this.postCount,\n                            date_start: this.dateStart,\n                            date_interval: this.dateInterval,\n                        };\n\n                        if (this.attrs.discussion) {\n                            body.discussion_count = 0;\n                            body.discussion_ids = [this.attrs.discussion.id()];\n                        } else {\n                            body.discussion_count = this.discussionCount;\n\n                            if (this.discussionTag === 'random') {\n                                body.tag_ids = 'random';\n                            } else if (this.discussionTag !== 'none') {\n                                body.tag_ids = this.discussionTag.split(',');\n                            }\n                        }\n\n                        app.request<any>({\n                            url: app.forum.attribute('apiUrl') + '/fake-data',\n                            method: 'POST',\n                            body,\n                        }).then(response => {\n                            this.dirty = false;\n                            this.loading = false;\n                            this.output = response && response.output || '<no output>';\n\n                            m.redraw();\n                        }).catch(e => {\n                            this.loading = false;\n                            m.redraw();\n                            throw e;\n                        });\n                    },\n                }, app.translator.trans(translationPrefix + 'send')) : [\n                    Button.component({\n                        className: 'Button',\n                        onclick: () => {\n                            this.userCount = 0;\n                            this.discussionCount = 0;\n                            this.discussionTag = 'none';\n                            this.postCount = 0;\n                            this.output = null;\n                        },\n                    }, app.translator.trans(translationPrefix + 'reset')),\n                    this.attrs.discussion ? [\n                        Button.component({\n                            className: 'Button Button--primary',\n                            onclick: () => {\n                                app.modal.close();\n\n                                window.location.reload();\n                            },\n                        }, app.translator.trans(translationPrefix + 'refresh')),\n                    ] : null,\n                    m('pre', this.output),\n                ],\n            ]),\n        ];\n    }\n}\n","import ExtensionPage from 'flarum/admin/components/ExtensionPage';\nimport GeneratorForm from '../../common/components/GeneratorForm';\n\nexport default class FakeDataPage extends ExtensionPage {\n    content() {\n        return m('.ExtensionPage-settings', m('.container', GeneratorForm.component()));\n    }\n}\n","import app from 'flarum/admin/app';\nimport FakeDataPage from './components/FakeDataPage';\n\napp.initializers.add('migratetoflarum-fake-data', function () {\n    app.extensionData\n        .for('migratetoflarum-fake-data')\n        .registerPage(FakeDataPage);\n});\n"],"names":["__webpack_require__","module","getter","__esModule","d","a","exports","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","Symbol","toStringTag","value","flarum","core","compat","_setPrototypeOf","p","setPrototypeOf","bind","__proto__","_inheritsLoose","subClass","superClass","create","constructor","translationPrefix","GeneratorForm","bulk","userCount","discussionCount","discussionTag","postCount","dateStart","dateInterval","dirty","loading","output","view","disabled","this","m","Switch","state","onchange","app","type","min","oninput","event","parseInt","target","attrs","discussion","extensions","map","tag","label","name","ids","id","isChild","parent","push","sort","join","icon","className","placeholder","Button","onclick","body","user_count","post_count","date_start","date_interval","discussion_count","discussion_ids","tag_ids","split","url","method","then","response","redraw","e","window","location","reload","Component","FakeDataPage","content","component","ExtensionPage","registerPage"],"sourceRoot":""}